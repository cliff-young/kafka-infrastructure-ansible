- name: Create public IP address
  azure_rm_publicipaddress:
    resource_group: "{{ rg }}"
    allocation_method: Static
    domain_name: "{{project}}-{{name}}"
    name: "pub-ip-{{name}}"
  async: 6000
  poll: 0
  loop: "{{ vm_names }}"
  loop_control:
    loop_var: "name"
  register: output_ip_address_async

- name: Create Network Security Group that allows SSH
  azure_rm_securitygroup:
    resource_group: "{{ rg }}"
    name: "nsg-{{name}}"
    rules:
      - name: SSH
        protocol: Tcp
        destination_port_range: 22
        access: Allow
        priority: 1001
        direction: Inbound
      - name: Broker
        protocol: Tcp
        destination_port_range: 9091
        access: Allow
        priority: 1002
        direction: Inbound
      - name: Broker2
        protocol: Tcp
        destination_port_range: 9092
        access: Allow
        priority: 1003
        direction: Inbound
      - name: HTTP_Connect
        protocol: Tcp
        destination_port_range: 8083
        access: Allow
        priority: 1004
        direction: Inbound
      - name: HTTP_Schema_Share
        protocol: Tcp
        destination_port_range: 8081
        access: Allow
        priority: 1005
        direction: Inbound
      - name: HTTP_Control_Center
        protocol: Tcp
        destination_port_range: 9021
        access: Allow
        priority: 1006
        direction: Inbound
      - name: KSQL
        protocol: Tcp
        destination_port_range: 8088
        access: Allow
        priority: 1007
        direction: Inbound
      - name: Zookeeper1
        protocol: Tcp
        destination_port_range: 2888
        access: Allow
        priority: 1008
        direction: Inbound
      - name: Zookeeper2
        protocol: Tcp
        destination_port_range: 3888
        access: Allow
        priority: 1009
        direction: Inbound
      - name: Zookeeper3
        protocol: Tcp
        destination_port_range: 2181
        access: Allow
        priority: 1010
        direction: Inbound        
      - name: Broker_out
        protocol: Tcp
        destination_port_range: 9091
        access: Allow
        priority: 1002
        direction: Outbound
      - name: Broker2_out
        protocol: Tcp
        destination_port_range: 9092
        access: Allow
        priority: 1003
        direction: Outbound
      - name: HTTP_Connect_out
        protocol: Tcp
        destination_port_range: 8083
        access: Allow
        priority: 1004
        direction: Outbound
      - name: HTTP_Schema_Share_out
        protocol: Tcp
        destination_port_range: 8081
        access: Allow
        priority: 1005
        direction: Outbound
      - name: HTTP_Control_Center_out
        protocol: Tcp
        destination_port_range: 9021
        access: Allow
        priority: 1006
        direction: Outbound
      - name: KSQL_out
        protocol: Tcp
        destination_port_range: 8088
        access: Allow
        priority: 1007
        direction: Outbound
      - name: Zookeeper1_out
        protocol: Tcp
        destination_port_range: 2888
        access: Allow
        priority: 1008
        direction: Outbound
      - name: Zookeeper2_out
        protocol: Tcp
        destination_port_range: 3888
        access: Allow
        priority: 1009
        direction: Outbound
      - name: Zookeeper3_out
        protocol: Tcp
        destination_port_range: 2181
        access: Allow
        priority: 1010
        direction: Outbound
  async: 6000
  poll: 0
  loop: "{{ vm_names }}"
  loop_control:
    loop_var: "name"
  register: output_nsg_async

- name: Check ip sync status
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ output_ip_address_async.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: output_ip_address
  until: output_ip_address.finished
  retries: 30

- name: Check nsg sync status
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ output_nsg_async.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: nsg
  until: nsg.finished
  retries: 30

- name: Create virtual network interface card
  azure_rm_networkinterface:
    resource_group: "{{ rg }}"
    name: "nic-{{name}}"
    virtual_network: "{{ vnet }}"
    subnet: vms
    public_ip_name: "pub-ip-{{name}}"
    security_group: "nsg-{{name}}"
  async: 6000
  poll: 0
  loop: "{{ vm_names }}"
  loop_control:
    loop_var: "name"
  register: output_nic_async

- name: Check nic sync status
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ output_nic_async.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: nic
  until: nic.finished
  retries: 30

- name: Create VM
  azure_rm_virtualmachine:
    resource_group: "{{ rg }}"
    name: "{{name}}"
    vm_size: "{{hostvars[name]['vm_size'] | default(vm_size)}}"
    admin_username: kafka
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/kafka/.ssh/authorized_keys
        key_data: "{{ssh.public_key if ssh is defined and ssh.public_key is defined else lookup('file', 'id_ssh_rsa.pub')}} kafka@azure-server"
    network_interfaces: "nic-{{name}}"
    managed_disk_type: Premium_LRS
    os_disk_name: "os-disk-{{name}}"    
    image:
        offer: CentOS
        publisher: OpenLogic
        sku: '7.5'
        version: latest
    data_disks:
      - lun: 0
        disk_size_gb: "{{hostvars[name]['vm_data_disk_size'] | default(vm_data_disk_size) | int}}"
        managed_disk_type: Premium_LRS
  async: 12000
  poll: 0
  loop: "{{ vm_names }}"
  loop_control:
    loop_var: "name"
  register: output_vm_async

- name: Check vm sync status
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ output_vm_async.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: vms
  until: vms.finished
  retries: 60
  delay: 10

# - name: Create Managed Disks
#   azure_rm_manageddisk:
#     resource_group: "{{ rg }}"
#     name: "data-disk-{{name}}"
#     storage_account_type: Premium_LRS
#     managed_by: "{{name}}"
#     disk_size_gb: 512
#   async: 6000
#   poll: 0
